{"version":3,"sources":["graphql/schema.js","graphql/resolvers.js","graphql/server.js","functions.js"],"names":["schema","gql","require","resolvers","Query","users","admin","database","ref","once","then","snap","val","Object","keys","map","key","gqlServer","app","ApolloServer","typeDefs","introspection","playground","applyMiddleware","path","cors","server","api","https","onRequest"],"mappings":";AAiBeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAjBf,MAAM,IAAEC,GAAQC,QAAQ,yBAElBF,EAASC;;;;;;;;;;;;;EAeAD,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACLAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAZf,MAAMA,EAAY,CAChBC,MAAO,CACLC,MAAO,IACLC,MACGC,WACAC,IAAI,SACJC,KAAK,SACLC,KAAKC,GAAQA,EAAKC,OAClBF,KAAKE,GAAOC,OAAOC,KAAKF,GAAKG,IAAIC,GAAOJ,EAAII,OAItCb,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACUAc,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAtBf,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,yBAEA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,gBAkBeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAhBf,SAASA,IACDC,MAAAA,GAAM,EAAZ,EAAA,WAYOA,OAVc,IAAIC,EAAJ,aAAiB,CACpCC,SAAUpB,EAD0B,QAEpCG,UAAAA,EAFoC,QAIpCkB,eAAe,EACfC,YAAY,IAGDC,gBAAgB,CAACL,IAAAA,EAAKM,KAAM,IAAKC,MAAM,IAE7CP,EAGMD,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACff,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAPA,IAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,qBAMA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJA,MAAMS,GAAS,EAAf,EAAA,WAIMC,EAAMC,EAAMC,MAAAA,UAAUH,GAA5B,QAAA,IAAA","file":"functions.js","sourceRoot":"../src","sourcesContent":["const { gql } = require('apollo-server-express');\n\nconst schema = gql`\n  type User {\n    name: String,\n    role: String,\n    eduction: String,\n    location: String,\n    bio: String,\n    experiences: String,\n    fun_facts: String\n  }\n  type Query {\n    users: [User]\n  }\n`;\n\nexport default schema;","const resolvers = {\n  Query: {\n    users: () =>\n      admin\n        .database()\n        .ref(\"users\")\n        .once(\"value\")\n        .then(snap => snap.val())\n        .then(val => Object.keys(val).map(key => val[key]))\n  }\n};\n\nexport default resolvers;","import express from 'express';\nimport { ApolloServer } from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\n\nfunction gqlServer() {\n  const app = express();\n\n  const apolloServer = new ApolloServer({\n    typeDefs: schema,\n    resolvers,\n    // Enable graphiql gui\n    introspection: true,\n    playground: true\n  });\n\n  apolloServer.applyMiddleware({app, path: '/', cors: true});\n\n  return app;\n}\n\nexport default gqlServer;","import { https } from 'firebase-functions';\nimport gqlServer from './graphql/server';\n\nconst server = gqlServer();\n\n// Graphql api\n// https://us-central1-<project-name>.cloudfunctions.net/api/\nconst api = https.onRequest(server);\n\nexport { api };"]}